name: CI - Code Quality and Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.13'

jobs:
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout codedevelop
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Run Black (Code Formatting Check)
      run: |
        black --check --diff .
        
    - name: Run isort (Import Sorting Check)
      run: |
        isort --check-only --diff .
        
    - name: Run Flake8 (Linting)
      run: |
        flake8 .

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_django_boards
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Run Django System Checks
      run: |
        python manage.py check --deploy
        
    - name: Run Migrations
      run: |
        python manage.py migrate --noinput
        
  build-test:
    name: Build Test Docker Image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image (test)
      run: |
        echo "üê≥ Testing Docker build..."
        docker build \
          -t django-boards:test .
        
    - name: Test Docker image
      run: |
        echo "üß™ Testing Docker image..."
        docker run -e SECRET_KEY=test-secret-key -e ALLOWED_HOSTS=localhost -e DATABASE_URL=sqlite:///db.sqlite3 --rm django-boards:test python manage.py check
